import turtle

t = turtle.Turtle()
turtle.bgcolor("gray80")
turtle.tracer(0, 0)
t.hideturtle()
step = 3
def writeDot(obj, rad, color):
    obj.pendown()
    obj.dot(rad, color)
    obj.penup()
    
fh = open("cool_smiley_mod.xpm", "r") # open a file handle
color_data = fh.readline()

def modify(ln):
    # Strips everything except the essential string
    # ln = one line of data from first column to the carriage return
    #
    mod_string = ""
    badChars = ['"', ',']
    ln = ln.strip()
    for n in ln:
        if n not in badChars:
            mod_string = mod_string + n
    return mod_string

color_data = modify(color_data)
[cols, rows, colors] = color_data.split()
rows = int(rows)
cols = int(cols)
colors = int(colors)

colorData = {} # a dictionary of symbols and colors

for i in range(colors):
    cLine = fh.readline()
    cLine = modify(cLine)
    [sym, c, colors] = cLine.split()
    colorData[sym] = colors # add a new dictionary entry
    
# Draw the image
t.penup()
b = []
for y in range(rows):
    image = fh.readline()
    image = modify(image)
    b.append(image)
    for x in range(len(image)):
        symbol = b[y][x]
        color = colorData.get(symbol, "black")  # Default to black if symbol is missing
        t.goto(x * step - (cols * step) / 2, (rows * step) / 2 - y * step)  # Center the image
        writeDot(t, step, color)

turtle.update()
